// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/constellations/ContentBlock Renders a <ContentBlock /> with a CTA 1`] = `
.c6 {
  margin-bottom: 32px;
  font-family: 'Raleway',sans-serif;
  font-size: 16px;
  font-weight: 800;
  background-color: #1C104E;
  color: #FFFFFF;
  display: inline-block;
  padding: 16px;
  border: none;
  line-height: 1;
  border-radius: 4px;
  cursor: pointer;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c4 {
  color: #303133;
  font-family: 'Raleway',sans-serif;
  margin: 0 0 32px;
  font-weight: 700;
  font-size: 36px;
}

.c5 {
  text-align: left;
  color: #303133;
  font-family: 'Lato',sans-serif;
  font-size: 24px;
  margin: 0 0 32px;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  margin-left: -0;
  margin-right: -0;
}

.c2 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  padding: 50px;
  text-align: center;
}

.c0 {
  overflow: hidden;
}

@media (min-width:0) {
  .c2 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width:62em) {
  .c2 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width:62em) {
  .c3 {
    padding: 32px 100px 0;
  }
}

<ContentBlock__StyledContentBlock
  background={false}
  body="ContentBlock is sooooooo coool and awesome!"
  cta={
    Object {
      "external": false,
      "text": "Click here!",
      "url": "path/to/link",
    }
  }
  headline="Test ContentBlock"
>
  <StyledComponent
    background={false}
    body="ContentBlock is sooooooo coool and awesome!"
    cta={
      Object {
        "external": false,
        "text": "Click here!",
        "url": "path/to/link",
      }
    }
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "ContentBlock__StyledContentBlock-sc-1pvw668-1",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "overflow:hidden;",
            [Function],
          ],
        },
        "defaultProps": Object {
          "background": false,
        },
        "displayName": "ContentBlock__StyledContentBlock",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "background": [Function],
        },
        "render": [Function],
        "styledComponentId": "ContentBlock__StyledContentBlock-sc-1pvw668-1",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    headline="Test ContentBlock"
  >
    <ContentBlock
      background={false}
      body="ContentBlock is sooooooo coool and awesome!"
      className="c0"
      cta={
        Object {
          "external": false,
          "text": "Click here!",
          "url": "path/to/link",
        }
      }
      headline="Test ContentBlock"
      image={null}
      imageAlign="right"
      textAlign="left"
    >
      <styled-shoelaces
        className="c0"
        gutter="0"
        reverse={true}
      >
        <StyledComponent
          className="c0"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled-shoelaces-eiu6xc-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "styled-shoelaces",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled-shoelaces-eiu6xc-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gutter="0"
          reverse={true}
        >
          <div
            className="c0 c1"
          >
            <styled-shoelaces
              alignItems="start"
              gutter="0"
              justifyContent="center"
              lg={1}
              xs={1}
            >
              <StyledComponent
                alignItems="start"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled-shoelaces-eiu6xc-0",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "styled-shoelaces",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "styled-shoelaces-eiu6xc-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gutter="0"
                justifyContent="center"
                lg={1}
                xs={1}
              >
                <div
                  className="c2"
                >
                  <ContentBlock__Container
                    center={true}
                  >
                    <StyledComponent
                      center={true}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ContentBlock__Container-sc-1pvw668-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "padding:50px;@media (min-width:62em){padding:32px 100px 0;}",
                              [Function],
                            ],
                          },
                          "displayName": "ContentBlock__Container",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ContentBlock__Container-sc-1pvw668-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c3"
                      >
                        <Typography__FeatureHeadline>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
                                  "isStatic": true,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "color:",
                                    "#303133",
                                    ";font-family:'Raleway',sans-serif;margin:0 0 32px;font-weight:700;font-size:36px;",
                                  ],
                                },
                                "displayName": "Typography__FeatureHeadline",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
                                "target": "h2",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <h2
                              className="c4"
                            >
                              Test ContentBlock
                            </h2>
                          </StyledComponent>
                        </Typography__FeatureHeadline>
                        <Typography__BodyCopy
                          inverted={false}
                          textAlign="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Typography__BodyCopy-sc-1h5b1wa-2",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    "text-align:",
                                    [Function],
                                    ";color:",
                                    [Function],
                                    ";font-family:'Lato',sans-serif;font-size:24px;margin:0 0 32px;",
                                  ],
                                },
                                "defaultProps": Object {
                                  "inverted": false,
                                  "textAlign": "left",
                                },
                                "displayName": "Typography__BodyCopy",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "inverted": [Function],
                                  "textAlign": [Function],
                                },
                                "render": [Function],
                                "renderers": Object {
                                  "blockquote": "blockquote",
                                  "break": "br",
                                  "code": [Function],
                                  "definition": [Function],
                                  "delete": "del",
                                  "emphasis": "em",
                                  "heading": [Function],
                                  "html": [Function],
                                  "image": "img",
                                  "imageReference": "img",
                                  "inlineCode": [Function],
                                  "link": "a",
                                  "linkReference": "a",
                                  "list": [Function],
                                  "listItem": [Function],
                                  "paragraph": "p",
                                  "parsedHtml": [Function],
                                  "root": [Function],
                                  "strong": "strong",
                                  "table": [Function],
                                  "tableBody": [Function],
                                  "tableCell": [Function],
                                  "tableHead": [Function],
                                  "tableRow": [Function],
                                  "text": [Function],
                                  "thematicBreak": "hr",
                                  "virtualHtml": [Function],
                                },
                                "styledComponentId": "Typography__BodyCopy-sc-1h5b1wa-2",
                                "target": [Function],
                                "toString": [Function],
                                "types": Array [
                                  "break",
                                  "paragraph",
                                  "emphasis",
                                  "strong",
                                  "thematicBreak",
                                  "blockquote",
                                  "delete",
                                  "link",
                                  "image",
                                  "linkReference",
                                  "imageReference",
                                  "table",
                                  "tableHead",
                                  "tableBody",
                                  "tableRow",
                                  "tableCell",
                                  "root",
                                  "text",
                                  "list",
                                  "listItem",
                                  "definition",
                                  "heading",
                                  "inlineCode",
                                  "code",
                                  "html",
                                  "virtualHtml",
                                  "parsedHtml",
                                ],
                                "uriTransformer": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                                Symbol(Symbol.hasInstance): [Function],
                              }
                            }
                            forwardedRef={null}
                            inverted={false}
                            textAlign="left"
                          >
                            <ReactMarkdown
                              astPlugins={Array []}
                              className="c5"
                              escapeHtml={true}
                              inverted={false}
                              plugins={Array []}
                              rawSourcePos={false}
                              renderers={Object {}}
                              skipHtml={false}
                              sourcePos={false}
                              textAlign="left"
                              transformLinkUri={[Function]}
                            >
                              <Root
                                className="c5"
                                key="root-1-1"
                              >
                                <div
                                  className="c5"
                                >
                                  <p
                                    key="paragraph-1-1"
                                  >
                                    <TextRenderer
                                      key="text-1-1"
                                      nodeKey="text-1-1"
                                      value="ContentBlock is sooooooo coool and awesome!"
                                    >
                                      ContentBlock is sooooooo coool and awesome!
                                    </TextRenderer>
                                  </p>
                                </div>
                              </Root>
                            </ReactMarkdown>
                          </StyledComponent>
                        </Typography__BodyCopy>
                        <Button__StyledButton
                          external={false}
                          text="Click here!"
                          type="primary"
                          url="path/to/link"
                        >
                          <StyledComponent
                            external={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Button__StyledButton-sc-19aup1o-0",
                                  "isStatic": false,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "margin-bottom:32px;font-family:'Raleway',sans-serif;font-size:16px;font-weight:800;background-color:",
                                    [Function],
                                    ";color:",
                                    [Function],
                                    ";display:inline-block;padding:16px;border:none;line-height:1;border-radius:4px;cursor:pointer;text-decoration:none;",
                                  ],
                                },
                                "defaultProps": Object {
                                  "type": "primary",
                                },
                                "displayName": "Button__StyledButton",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "type": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "Button__StyledButton-sc-19aup1o-0",
                                "target": [Function],
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                                Symbol(Symbol.hasInstance): [Function],
                              }
                            }
                            forwardedRef={null}
                            text="Click here!"
                            type="primary"
                            url="path/to/link"
                          >
                            <Button
                              className="c6"
                              external={false}
                              onClick={null}
                              text="Click here!"
                              type="primary"
                              url="path/to/link"
                            >
                              <a
                                className="c6"
                                href="path/to/link"
                                rel=""
                                target=""
                              >
                                Click here!
                              </a>
                            </Button>
                          </StyledComponent>
                        </Button__StyledButton>
                      </div>
                    </StyledComponent>
                  </ContentBlock__Container>
                </div>
              </StyledComponent>
            </styled-shoelaces>
          </div>
        </StyledComponent>
      </styled-shoelaces>
    </ContentBlock>
  </StyledComponent>
</ContentBlock__StyledContentBlock>
`;

exports[`components/constellations/ContentBlock Renders a <ContentBlock /> with a grey background 1`] = `
.c3 {
  width: 100%;
}

.c6 {
  color: #303133;
  font-family: 'Raleway',sans-serif;
  margin: 0 0 32px;
  font-weight: 700;
  font-size: 36px;
}

.c7 {
  text-align: left;
  color: #303133;
  font-family: 'Lato',sans-serif;
  font-size: 24px;
  margin: 0 0 32px;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  margin-left: -0;
  margin-right: -0;
}

.c2 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  padding: 50px;
}

.c0 {
  overflow: hidden;
  background-color: #F5F5F5;
}

@media (min-width:0) {
  .c2 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width:62em) {
  .c2 {
    -webkit-flex-basis: 50%;
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    max-width: 50%;
  }
}

@media (min-width:0) {
  .c4 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width:62em) {
  .c4 {
    -webkit-flex-basis: 50%;
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    max-width: 50%;
  }
}

@media (min-width:62em) {
  .c5 {
    padding: 32px 100px 0;
  }
}

<ContentBlock__StyledContentBlock
  background={true}
  body="ContentBlock is sooooooo coool and awesome!"
  headline="Test ContentBlock"
  image={
    Object {
      "alt": "Cool image!",
      "src": "path/to/image",
    }
  }
>
  <StyledComponent
    background={true}
    body="ContentBlock is sooooooo coool and awesome!"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "ContentBlock__StyledContentBlock-sc-1pvw668-1",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "overflow:hidden;",
            [Function],
          ],
        },
        "defaultProps": Object {
          "background": false,
        },
        "displayName": "ContentBlock__StyledContentBlock",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "background": [Function],
        },
        "render": [Function],
        "styledComponentId": "ContentBlock__StyledContentBlock-sc-1pvw668-1",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    headline="Test ContentBlock"
    image={
      Object {
        "alt": "Cool image!",
        "src": "path/to/image",
      }
    }
  >
    <ContentBlock
      background={true}
      body="ContentBlock is sooooooo coool and awesome!"
      className="c0"
      cta={null}
      headline="Test ContentBlock"
      image={
        Object {
          "alt": "Cool image!",
          "src": "path/to/image",
        }
      }
      imageAlign="right"
      textAlign="left"
    >
      <styled-shoelaces
        className="c0"
        gutter="0"
        reverse={true}
      >
        <StyledComponent
          className="c0"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled-shoelaces-eiu6xc-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "styled-shoelaces",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled-shoelaces-eiu6xc-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gutter="0"
          reverse={true}
        >
          <div
            className="c0 c1"
          >
            <styled-shoelaces
              gutter="0"
              lg={0.5}
              xs={1}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled-shoelaces-eiu6xc-0",
                      "isStatic": false,
                      "lastClassName": "c4",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "styled-shoelaces",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "styled-shoelaces-eiu6xc-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gutter="0"
                lg={0.5}
                xs={1}
              >
                <div
                  className="c2"
                >
                  <Image__StyledImage
                    alt="Cool image!"
                    fullWidth={true}
                    src="path/to/image"
                  >
                    <StyledComponent
                      alt="Cool image!"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Image__StyledImage-sc-1mf1fvy-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "defaultProps": Object {
                            "fullWidth": false,
                          },
                          "displayName": "Image__StyledImage",
                          "foldedComponentIds": Array [],
                          "propTypes": Object {
                            "fullWidth": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "Image__StyledImage-sc-1mf1fvy-0",
                          "target": "img",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      fullWidth={true}
                      src="path/to/image"
                    >
                      <img
                        alt="Cool image!"
                        className="c3"
                        src="path/to/image"
                      />
                    </StyledComponent>
                  </Image__StyledImage>
                </div>
              </StyledComponent>
            </styled-shoelaces>
            <styled-shoelaces
              alignItems="start"
              gutter="0"
              justifyContent="center"
              lg={0.5}
              xs={1}
            >
              <StyledComponent
                alignItems="start"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled-shoelaces-eiu6xc-0",
                      "isStatic": false,
                      "lastClassName": "c4",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "styled-shoelaces",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "styled-shoelaces-eiu6xc-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gutter="0"
                justifyContent="center"
                lg={0.5}
                xs={1}
              >
                <div
                  className="c4"
                >
                  <ContentBlock__Container
                    center={false}
                  >
                    <StyledComponent
                      center={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ContentBlock__Container-sc-1pvw668-0",
                            "isStatic": false,
                            "lastClassName": "c5",
                            "rules": Array [
                              "padding:50px;@media (min-width:62em){padding:32px 100px 0;}",
                              [Function],
                            ],
                          },
                          "displayName": "ContentBlock__Container",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ContentBlock__Container-sc-1pvw668-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c5"
                      >
                        <Typography__FeatureHeadline>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
                                  "isStatic": true,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "color:",
                                    "#303133",
                                    ";font-family:'Raleway',sans-serif;margin:0 0 32px;font-weight:700;font-size:36px;",
                                  ],
                                },
                                "displayName": "Typography__FeatureHeadline",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
                                "target": "h2",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <h2
                              className="c6"
                            >
                              Test ContentBlock
                            </h2>
                          </StyledComponent>
                        </Typography__FeatureHeadline>
                        <Typography__BodyCopy
                          inverted={false}
                          textAlign="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Typography__BodyCopy-sc-1h5b1wa-2",
                                  "isStatic": false,
                                  "lastClassName": "c7",
                                  "rules": Array [
                                    "text-align:",
                                    [Function],
                                    ";color:",
                                    [Function],
                                    ";font-family:'Lato',sans-serif;font-size:24px;margin:0 0 32px;",
                                  ],
                                },
                                "defaultProps": Object {
                                  "inverted": false,
                                  "textAlign": "left",
                                },
                                "displayName": "Typography__BodyCopy",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "inverted": [Function],
                                  "textAlign": [Function],
                                },
                                "render": [Function],
                                "renderers": Object {
                                  "blockquote": "blockquote",
                                  "break": "br",
                                  "code": [Function],
                                  "definition": [Function],
                                  "delete": "del",
                                  "emphasis": "em",
                                  "heading": [Function],
                                  "html": [Function],
                                  "image": "img",
                                  "imageReference": "img",
                                  "inlineCode": [Function],
                                  "link": "a",
                                  "linkReference": "a",
                                  "list": [Function],
                                  "listItem": [Function],
                                  "paragraph": "p",
                                  "parsedHtml": [Function],
                                  "root": [Function],
                                  "strong": "strong",
                                  "table": [Function],
                                  "tableBody": [Function],
                                  "tableCell": [Function],
                                  "tableHead": [Function],
                                  "tableRow": [Function],
                                  "text": [Function],
                                  "thematicBreak": "hr",
                                  "virtualHtml": [Function],
                                },
                                "styledComponentId": "Typography__BodyCopy-sc-1h5b1wa-2",
                                "target": [Function],
                                "toString": [Function],
                                "types": Array [
                                  "break",
                                  "paragraph",
                                  "emphasis",
                                  "strong",
                                  "thematicBreak",
                                  "blockquote",
                                  "delete",
                                  "link",
                                  "image",
                                  "linkReference",
                                  "imageReference",
                                  "table",
                                  "tableHead",
                                  "tableBody",
                                  "tableRow",
                                  "tableCell",
                                  "root",
                                  "text",
                                  "list",
                                  "listItem",
                                  "definition",
                                  "heading",
                                  "inlineCode",
                                  "code",
                                  "html",
                                  "virtualHtml",
                                  "parsedHtml",
                                ],
                                "uriTransformer": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                                Symbol(Symbol.hasInstance): [Function],
                              }
                            }
                            forwardedRef={null}
                            inverted={false}
                            textAlign="left"
                          >
                            <ReactMarkdown
                              astPlugins={Array []}
                              className="c7"
                              escapeHtml={true}
                              inverted={false}
                              plugins={Array []}
                              rawSourcePos={false}
                              renderers={Object {}}
                              skipHtml={false}
                              sourcePos={false}
                              textAlign="left"
                              transformLinkUri={[Function]}
                            >
                              <Root
                                className="c7"
                                key="root-1-1"
                              >
                                <div
                                  className="c7"
                                >
                                  <p
                                    key="paragraph-1-1"
                                  >
                                    <TextRenderer
                                      key="text-1-1"
                                      nodeKey="text-1-1"
                                      value="ContentBlock is sooooooo coool and awesome!"
                                    >
                                      ContentBlock is sooooooo coool and awesome!
                                    </TextRenderer>
                                  </p>
                                </div>
                              </Root>
                            </ReactMarkdown>
                          </StyledComponent>
                        </Typography__BodyCopy>
                      </div>
                    </StyledComponent>
                  </ContentBlock__Container>
                </div>
              </StyledComponent>
            </styled-shoelaces>
          </div>
        </StyledComponent>
      </styled-shoelaces>
    </ContentBlock>
  </StyledComponent>
</ContentBlock__StyledContentBlock>
`;

exports[`components/constellations/ContentBlock Renders a <ContentBlock /> with an Image 1`] = `
.c3 {
  width: 100%;
}

.c6 {
  color: #303133;
  font-family: 'Raleway',sans-serif;
  margin: 0 0 32px;
  font-weight: 700;
  font-size: 36px;
}

.c7 {
  text-align: left;
  color: #303133;
  font-family: 'Lato',sans-serif;
  font-size: 24px;
  margin: 0 0 32px;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  margin-left: -0;
  margin-right: -0;
}

.c2 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  padding: 50px;
}

.c0 {
  overflow: hidden;
}

@media (min-width:0) {
  .c2 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width:62em) {
  .c2 {
    -webkit-flex-basis: 50%;
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    max-width: 50%;
  }
}

@media (min-width:0) {
  .c4 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width:62em) {
  .c4 {
    -webkit-flex-basis: 50%;
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    max-width: 50%;
  }
}

@media (min-width:62em) {
  .c5 {
    padding: 32px 100px 0;
  }
}

<ContentBlock__StyledContentBlock
  background={false}
  body="ContentBlock is sooooooo coool and awesome!"
  headline="Test ContentBlock"
  image={
    Object {
      "alt": "Cool image!",
      "src": "path/to/image",
    }
  }
>
  <StyledComponent
    background={false}
    body="ContentBlock is sooooooo coool and awesome!"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "ContentBlock__StyledContentBlock-sc-1pvw668-1",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "overflow:hidden;",
            [Function],
          ],
        },
        "defaultProps": Object {
          "background": false,
        },
        "displayName": "ContentBlock__StyledContentBlock",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "background": [Function],
        },
        "render": [Function],
        "styledComponentId": "ContentBlock__StyledContentBlock-sc-1pvw668-1",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    headline="Test ContentBlock"
    image={
      Object {
        "alt": "Cool image!",
        "src": "path/to/image",
      }
    }
  >
    <ContentBlock
      background={false}
      body="ContentBlock is sooooooo coool and awesome!"
      className="c0"
      cta={null}
      headline="Test ContentBlock"
      image={
        Object {
          "alt": "Cool image!",
          "src": "path/to/image",
        }
      }
      imageAlign="right"
      textAlign="left"
    >
      <styled-shoelaces
        className="c0"
        gutter="0"
        reverse={true}
      >
        <StyledComponent
          className="c0"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled-shoelaces-eiu6xc-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "styled-shoelaces",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled-shoelaces-eiu6xc-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gutter="0"
          reverse={true}
        >
          <div
            className="c0 c1"
          >
            <styled-shoelaces
              gutter="0"
              lg={0.5}
              xs={1}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled-shoelaces-eiu6xc-0",
                      "isStatic": false,
                      "lastClassName": "c4",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "styled-shoelaces",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "styled-shoelaces-eiu6xc-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gutter="0"
                lg={0.5}
                xs={1}
              >
                <div
                  className="c2"
                >
                  <Image__StyledImage
                    alt="Cool image!"
                    fullWidth={true}
                    src="path/to/image"
                  >
                    <StyledComponent
                      alt="Cool image!"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Image__StyledImage-sc-1mf1fvy-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "defaultProps": Object {
                            "fullWidth": false,
                          },
                          "displayName": "Image__StyledImage",
                          "foldedComponentIds": Array [],
                          "propTypes": Object {
                            "fullWidth": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "Image__StyledImage-sc-1mf1fvy-0",
                          "target": "img",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      fullWidth={true}
                      src="path/to/image"
                    >
                      <img
                        alt="Cool image!"
                        className="c3"
                        src="path/to/image"
                      />
                    </StyledComponent>
                  </Image__StyledImage>
                </div>
              </StyledComponent>
            </styled-shoelaces>
            <styled-shoelaces
              alignItems="start"
              gutter="0"
              justifyContent="center"
              lg={0.5}
              xs={1}
            >
              <StyledComponent
                alignItems="start"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled-shoelaces-eiu6xc-0",
                      "isStatic": false,
                      "lastClassName": "c4",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "styled-shoelaces",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "styled-shoelaces-eiu6xc-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gutter="0"
                justifyContent="center"
                lg={0.5}
                xs={1}
              >
                <div
                  className="c4"
                >
                  <ContentBlock__Container
                    center={false}
                  >
                    <StyledComponent
                      center={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ContentBlock__Container-sc-1pvw668-0",
                            "isStatic": false,
                            "lastClassName": "c5",
                            "rules": Array [
                              "padding:50px;@media (min-width:62em){padding:32px 100px 0;}",
                              [Function],
                            ],
                          },
                          "displayName": "ContentBlock__Container",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ContentBlock__Container-sc-1pvw668-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c5"
                      >
                        <Typography__FeatureHeadline>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
                                  "isStatic": true,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "color:",
                                    "#303133",
                                    ";font-family:'Raleway',sans-serif;margin:0 0 32px;font-weight:700;font-size:36px;",
                                  ],
                                },
                                "displayName": "Typography__FeatureHeadline",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
                                "target": "h2",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <h2
                              className="c6"
                            >
                              Test ContentBlock
                            </h2>
                          </StyledComponent>
                        </Typography__FeatureHeadline>
                        <Typography__BodyCopy
                          inverted={false}
                          textAlign="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Typography__BodyCopy-sc-1h5b1wa-2",
                                  "isStatic": false,
                                  "lastClassName": "c7",
                                  "rules": Array [
                                    "text-align:",
                                    [Function],
                                    ";color:",
                                    [Function],
                                    ";font-family:'Lato',sans-serif;font-size:24px;margin:0 0 32px;",
                                  ],
                                },
                                "defaultProps": Object {
                                  "inverted": false,
                                  "textAlign": "left",
                                },
                                "displayName": "Typography__BodyCopy",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "inverted": [Function],
                                  "textAlign": [Function],
                                },
                                "render": [Function],
                                "renderers": Object {
                                  "blockquote": "blockquote",
                                  "break": "br",
                                  "code": [Function],
                                  "definition": [Function],
                                  "delete": "del",
                                  "emphasis": "em",
                                  "heading": [Function],
                                  "html": [Function],
                                  "image": "img",
                                  "imageReference": "img",
                                  "inlineCode": [Function],
                                  "link": "a",
                                  "linkReference": "a",
                                  "list": [Function],
                                  "listItem": [Function],
                                  "paragraph": "p",
                                  "parsedHtml": [Function],
                                  "root": [Function],
                                  "strong": "strong",
                                  "table": [Function],
                                  "tableBody": [Function],
                                  "tableCell": [Function],
                                  "tableHead": [Function],
                                  "tableRow": [Function],
                                  "text": [Function],
                                  "thematicBreak": "hr",
                                  "virtualHtml": [Function],
                                },
                                "styledComponentId": "Typography__BodyCopy-sc-1h5b1wa-2",
                                "target": [Function],
                                "toString": [Function],
                                "types": Array [
                                  "break",
                                  "paragraph",
                                  "emphasis",
                                  "strong",
                                  "thematicBreak",
                                  "blockquote",
                                  "delete",
                                  "link",
                                  "image",
                                  "linkReference",
                                  "imageReference",
                                  "table",
                                  "tableHead",
                                  "tableBody",
                                  "tableRow",
                                  "tableCell",
                                  "root",
                                  "text",
                                  "list",
                                  "listItem",
                                  "definition",
                                  "heading",
                                  "inlineCode",
                                  "code",
                                  "html",
                                  "virtualHtml",
                                  "parsedHtml",
                                ],
                                "uriTransformer": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                                Symbol(Symbol.hasInstance): [Function],
                              }
                            }
                            forwardedRef={null}
                            inverted={false}
                            textAlign="left"
                          >
                            <ReactMarkdown
                              astPlugins={Array []}
                              className="c7"
                              escapeHtml={true}
                              inverted={false}
                              plugins={Array []}
                              rawSourcePos={false}
                              renderers={Object {}}
                              skipHtml={false}
                              sourcePos={false}
                              textAlign="left"
                              transformLinkUri={[Function]}
                            >
                              <Root
                                className="c7"
                                key="root-1-1"
                              >
                                <div
                                  className="c7"
                                >
                                  <p
                                    key="paragraph-1-1"
                                  >
                                    <TextRenderer
                                      key="text-1-1"
                                      nodeKey="text-1-1"
                                      value="ContentBlock is sooooooo coool and awesome!"
                                    >
                                      ContentBlock is sooooooo coool and awesome!
                                    </TextRenderer>
                                  </p>
                                </div>
                              </Root>
                            </ReactMarkdown>
                          </StyledComponent>
                        </Typography__BodyCopy>
                      </div>
                    </StyledComponent>
                  </ContentBlock__Container>
                </div>
              </StyledComponent>
            </styled-shoelaces>
          </div>
        </StyledComponent>
      </styled-shoelaces>
    </ContentBlock>
  </StyledComponent>
</ContentBlock__StyledContentBlock>
`;

exports[`components/constellations/ContentBlock Renders a <ContentBlock /> with an right imageAlign and left textAlign 1`] = `
.c3 {
  width: 100%;
}

.c6 {
  color: #303133;
  font-family: 'Raleway',sans-serif;
  margin: 0 0 32px;
  font-weight: 700;
  font-size: 36px;
}

.c7 {
  text-align: left;
  color: #303133;
  font-family: 'Lato',sans-serif;
  font-size: 24px;
  margin: 0 0 32px;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  margin-left: -0;
  margin-right: -0;
}

.c2 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  padding: 50px;
}

.c0 {
  overflow: hidden;
}

@media (min-width:0) {
  .c2 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width:62em) {
  .c2 {
    -webkit-flex-basis: 50%;
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    max-width: 50%;
  }
}

@media (min-width:0) {
  .c4 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width:62em) {
  .c4 {
    -webkit-flex-basis: 50%;
    -ms-flex-preferred-size: 50%;
    flex-basis: 50%;
    max-width: 50%;
  }
}

@media (min-width:62em) {
  .c5 {
    padding: 32px 100px 0;
  }
}

<ContentBlock__StyledContentBlock
  background={false}
  body="ContentBlock is sooooooo coool and awesome!"
  headline="Test ContentBlock"
  image={
    Object {
      "alt": "Cool image!",
      "src": "path/to/image",
    }
  }
  imageAlign="right"
  textAlign="left"
>
  <StyledComponent
    background={false}
    body="ContentBlock is sooooooo coool and awesome!"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "ContentBlock__StyledContentBlock-sc-1pvw668-1",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "overflow:hidden;",
            [Function],
          ],
        },
        "defaultProps": Object {
          "background": false,
        },
        "displayName": "ContentBlock__StyledContentBlock",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "background": [Function],
        },
        "render": [Function],
        "styledComponentId": "ContentBlock__StyledContentBlock-sc-1pvw668-1",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    headline="Test ContentBlock"
    image={
      Object {
        "alt": "Cool image!",
        "src": "path/to/image",
      }
    }
    imageAlign="right"
    textAlign="left"
  >
    <ContentBlock
      background={false}
      body="ContentBlock is sooooooo coool and awesome!"
      className="c0"
      cta={null}
      headline="Test ContentBlock"
      image={
        Object {
          "alt": "Cool image!",
          "src": "path/to/image",
        }
      }
      imageAlign="right"
      textAlign="left"
    >
      <styled-shoelaces
        className="c0"
        gutter="0"
        reverse={true}
      >
        <StyledComponent
          className="c0"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled-shoelaces-eiu6xc-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "styled-shoelaces",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled-shoelaces-eiu6xc-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gutter="0"
          reverse={true}
        >
          <div
            className="c0 c1"
          >
            <styled-shoelaces
              gutter="0"
              lg={0.5}
              xs={1}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled-shoelaces-eiu6xc-0",
                      "isStatic": false,
                      "lastClassName": "c4",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "styled-shoelaces",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "styled-shoelaces-eiu6xc-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gutter="0"
                lg={0.5}
                xs={1}
              >
                <div
                  className="c2"
                >
                  <Image__StyledImage
                    alt="Cool image!"
                    fullWidth={true}
                    src="path/to/image"
                  >
                    <StyledComponent
                      alt="Cool image!"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Image__StyledImage-sc-1mf1fvy-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "defaultProps": Object {
                            "fullWidth": false,
                          },
                          "displayName": "Image__StyledImage",
                          "foldedComponentIds": Array [],
                          "propTypes": Object {
                            "fullWidth": [Function],
                          },
                          "render": [Function],
                          "styledComponentId": "Image__StyledImage-sc-1mf1fvy-0",
                          "target": "img",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      fullWidth={true}
                      src="path/to/image"
                    >
                      <img
                        alt="Cool image!"
                        className="c3"
                        src="path/to/image"
                      />
                    </StyledComponent>
                  </Image__StyledImage>
                </div>
              </StyledComponent>
            </styled-shoelaces>
            <styled-shoelaces
              alignItems="start"
              gutter="0"
              justifyContent="center"
              lg={0.5}
              xs={1}
            >
              <StyledComponent
                alignItems="start"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled-shoelaces-eiu6xc-0",
                      "isStatic": false,
                      "lastClassName": "c4",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "styled-shoelaces",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "styled-shoelaces-eiu6xc-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gutter="0"
                justifyContent="center"
                lg={0.5}
                xs={1}
              >
                <div
                  className="c4"
                >
                  <ContentBlock__Container
                    center={false}
                  >
                    <StyledComponent
                      center={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ContentBlock__Container-sc-1pvw668-0",
                            "isStatic": false,
                            "lastClassName": "c5",
                            "rules": Array [
                              "padding:50px;@media (min-width:62em){padding:32px 100px 0;}",
                              [Function],
                            ],
                          },
                          "displayName": "ContentBlock__Container",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ContentBlock__Container-sc-1pvw668-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c5"
                      >
                        <Typography__FeatureHeadline>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
                                  "isStatic": true,
                                  "lastClassName": "c6",
                                  "rules": Array [
                                    "color:",
                                    "#303133",
                                    ";font-family:'Raleway',sans-serif;margin:0 0 32px;font-weight:700;font-size:36px;",
                                  ],
                                },
                                "displayName": "Typography__FeatureHeadline",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
                                "target": "h2",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <h2
                              className="c6"
                            >
                              Test ContentBlock
                            </h2>
                          </StyledComponent>
                        </Typography__FeatureHeadline>
                        <Typography__BodyCopy
                          inverted={false}
                          textAlign="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Typography__BodyCopy-sc-1h5b1wa-2",
                                  "isStatic": false,
                                  "lastClassName": "c7",
                                  "rules": Array [
                                    "text-align:",
                                    [Function],
                                    ";color:",
                                    [Function],
                                    ";font-family:'Lato',sans-serif;font-size:24px;margin:0 0 32px;",
                                  ],
                                },
                                "defaultProps": Object {
                                  "inverted": false,
                                  "textAlign": "left",
                                },
                                "displayName": "Typography__BodyCopy",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "inverted": [Function],
                                  "textAlign": [Function],
                                },
                                "render": [Function],
                                "renderers": Object {
                                  "blockquote": "blockquote",
                                  "break": "br",
                                  "code": [Function],
                                  "definition": [Function],
                                  "delete": "del",
                                  "emphasis": "em",
                                  "heading": [Function],
                                  "html": [Function],
                                  "image": "img",
                                  "imageReference": "img",
                                  "inlineCode": [Function],
                                  "link": "a",
                                  "linkReference": "a",
                                  "list": [Function],
                                  "listItem": [Function],
                                  "paragraph": "p",
                                  "parsedHtml": [Function],
                                  "root": [Function],
                                  "strong": "strong",
                                  "table": [Function],
                                  "tableBody": [Function],
                                  "tableCell": [Function],
                                  "tableHead": [Function],
                                  "tableRow": [Function],
                                  "text": [Function],
                                  "thematicBreak": "hr",
                                  "virtualHtml": [Function],
                                },
                                "styledComponentId": "Typography__BodyCopy-sc-1h5b1wa-2",
                                "target": [Function],
                                "toString": [Function],
                                "types": Array [
                                  "break",
                                  "paragraph",
                                  "emphasis",
                                  "strong",
                                  "thematicBreak",
                                  "blockquote",
                                  "delete",
                                  "link",
                                  "image",
                                  "linkReference",
                                  "imageReference",
                                  "table",
                                  "tableHead",
                                  "tableBody",
                                  "tableRow",
                                  "tableCell",
                                  "root",
                                  "text",
                                  "list",
                                  "listItem",
                                  "definition",
                                  "heading",
                                  "inlineCode",
                                  "code",
                                  "html",
                                  "virtualHtml",
                                  "parsedHtml",
                                ],
                                "uriTransformer": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                                Symbol(Symbol.hasInstance): [Function],
                              }
                            }
                            forwardedRef={null}
                            inverted={false}
                            textAlign="left"
                          >
                            <ReactMarkdown
                              astPlugins={Array []}
                              className="c7"
                              escapeHtml={true}
                              inverted={false}
                              plugins={Array []}
                              rawSourcePos={false}
                              renderers={Object {}}
                              skipHtml={false}
                              sourcePos={false}
                              textAlign="left"
                              transformLinkUri={[Function]}
                            >
                              <Root
                                className="c7"
                                key="root-1-1"
                              >
                                <div
                                  className="c7"
                                >
                                  <p
                                    key="paragraph-1-1"
                                  >
                                    <TextRenderer
                                      key="text-1-1"
                                      nodeKey="text-1-1"
                                      value="ContentBlock is sooooooo coool and awesome!"
                                    >
                                      ContentBlock is sooooooo coool and awesome!
                                    </TextRenderer>
                                  </p>
                                </div>
                              </Root>
                            </ReactMarkdown>
                          </StyledComponent>
                        </Typography__BodyCopy>
                      </div>
                    </StyledComponent>
                  </ContentBlock__Container>
                </div>
              </StyledComponent>
            </styled-shoelaces>
          </div>
        </StyledComponent>
      </styled-shoelaces>
    </ContentBlock>
  </StyledComponent>
</ContentBlock__StyledContentBlock>
`;

exports[`components/constellations/ContentBlock Renders a <ContentBlock /> with no image 1`] = `
.c4 {
  color: #303133;
  font-family: 'Raleway',sans-serif;
  margin: 0 0 32px;
  font-weight: 700;
  font-size: 36px;
}

.c5 {
  text-align: left;
  color: #303133;
  font-family: 'Lato',sans-serif;
  font-size: 24px;
  margin: 0 0 32px;
}

.c1 {
  box-sizing: border-box;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  margin-left: -0;
  margin-right: -0;
}

.c2 {
  box-sizing: border-box;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  padding: 0;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  align-self: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c3 {
  padding: 50px;
  text-align: center;
}

.c0 {
  overflow: hidden;
}

@media (min-width:0) {
  .c2 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width:62em) {
  .c2 {
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media (min-width:62em) {
  .c3 {
    padding: 32px 100px 0;
  }
}

<ContentBlock__StyledContentBlock
  background={false}
  body="ContentBlock is sooooooo coool and awesome!"
  headline="Test ContentBlock"
>
  <StyledComponent
    background={false}
    body="ContentBlock is sooooooo coool and awesome!"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "ContentBlock__StyledContentBlock-sc-1pvw668-1",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "overflow:hidden;",
            [Function],
          ],
        },
        "defaultProps": Object {
          "background": false,
        },
        "displayName": "ContentBlock__StyledContentBlock",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "background": [Function],
        },
        "render": [Function],
        "styledComponentId": "ContentBlock__StyledContentBlock-sc-1pvw668-1",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    headline="Test ContentBlock"
  >
    <ContentBlock
      background={false}
      body="ContentBlock is sooooooo coool and awesome!"
      className="c0"
      cta={null}
      headline="Test ContentBlock"
      image={null}
      imageAlign="right"
      textAlign="left"
    >
      <styled-shoelaces
        className="c0"
        gutter="0"
        reverse={true}
      >
        <StyledComponent
          className="c0"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "styled-shoelaces-eiu6xc-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "styled-shoelaces",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "styled-shoelaces-eiu6xc-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gutter="0"
          reverse={true}
        >
          <div
            className="c0 c1"
          >
            <styled-shoelaces
              alignItems="start"
              gutter="0"
              justifyContent="center"
              lg={1}
              xs={1}
            >
              <StyledComponent
                alignItems="start"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "styled-shoelaces-eiu6xc-0",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "styled-shoelaces",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "styled-shoelaces-eiu6xc-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gutter="0"
                justifyContent="center"
                lg={1}
                xs={1}
              >
                <div
                  className="c2"
                >
                  <ContentBlock__Container
                    center={true}
                  >
                    <StyledComponent
                      center={true}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "ContentBlock__Container-sc-1pvw668-0",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "padding:50px;@media (min-width:62em){padding:32px 100px 0;}",
                              [Function],
                            ],
                          },
                          "displayName": "ContentBlock__Container",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "ContentBlock__Container-sc-1pvw668-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c3"
                      >
                        <Typography__FeatureHeadline>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
                                  "isStatic": true,
                                  "lastClassName": "c4",
                                  "rules": Array [
                                    "color:",
                                    "#303133",
                                    ";font-family:'Raleway',sans-serif;margin:0 0 32px;font-weight:700;font-size:36px;",
                                  ],
                                },
                                "displayName": "Typography__FeatureHeadline",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
                                "target": "h2",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <h2
                              className="c4"
                            >
                              Test ContentBlock
                            </h2>
                          </StyledComponent>
                        </Typography__FeatureHeadline>
                        <Typography__BodyCopy
                          inverted={false}
                          textAlign="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Typography__BodyCopy-sc-1h5b1wa-2",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    "text-align:",
                                    [Function],
                                    ";color:",
                                    [Function],
                                    ";font-family:'Lato',sans-serif;font-size:24px;margin:0 0 32px;",
                                  ],
                                },
                                "defaultProps": Object {
                                  "inverted": false,
                                  "textAlign": "left",
                                },
                                "displayName": "Typography__BodyCopy",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "inverted": [Function],
                                  "textAlign": [Function],
                                },
                                "render": [Function],
                                "renderers": Object {
                                  "blockquote": "blockquote",
                                  "break": "br",
                                  "code": [Function],
                                  "definition": [Function],
                                  "delete": "del",
                                  "emphasis": "em",
                                  "heading": [Function],
                                  "html": [Function],
                                  "image": "img",
                                  "imageReference": "img",
                                  "inlineCode": [Function],
                                  "link": "a",
                                  "linkReference": "a",
                                  "list": [Function],
                                  "listItem": [Function],
                                  "paragraph": "p",
                                  "parsedHtml": [Function],
                                  "root": [Function],
                                  "strong": "strong",
                                  "table": [Function],
                                  "tableBody": [Function],
                                  "tableCell": [Function],
                                  "tableHead": [Function],
                                  "tableRow": [Function],
                                  "text": [Function],
                                  "thematicBreak": "hr",
                                  "virtualHtml": [Function],
                                },
                                "styledComponentId": "Typography__BodyCopy-sc-1h5b1wa-2",
                                "target": [Function],
                                "toString": [Function],
                                "types": Array [
                                  "break",
                                  "paragraph",
                                  "emphasis",
                                  "strong",
                                  "thematicBreak",
                                  "blockquote",
                                  "delete",
                                  "link",
                                  "image",
                                  "linkReference",
                                  "imageReference",
                                  "table",
                                  "tableHead",
                                  "tableBody",
                                  "tableRow",
                                  "tableCell",
                                  "root",
                                  "text",
                                  "list",
                                  "listItem",
                                  "definition",
                                  "heading",
                                  "inlineCode",
                                  "code",
                                  "html",
                                  "virtualHtml",
                                  "parsedHtml",
                                ],
                                "uriTransformer": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                                Symbol(Symbol.hasInstance): [Function],
                              }
                            }
                            forwardedRef={null}
                            inverted={false}
                            textAlign="left"
                          >
                            <ReactMarkdown
                              astPlugins={Array []}
                              className="c5"
                              escapeHtml={true}
                              inverted={false}
                              plugins={Array []}
                              rawSourcePos={false}
                              renderers={Object {}}
                              skipHtml={false}
                              sourcePos={false}
                              textAlign="left"
                              transformLinkUri={[Function]}
                            >
                              <Root
                                className="c5"
                                key="root-1-1"
                              >
                                <div
                                  className="c5"
                                >
                                  <p
                                    key="paragraph-1-1"
                                  >
                                    <TextRenderer
                                      key="text-1-1"
                                      nodeKey="text-1-1"
                                      value="ContentBlock is sooooooo coool and awesome!"
                                    >
                                      ContentBlock is sooooooo coool and awesome!
                                    </TextRenderer>
                                  </p>
                                </div>
                              </Root>
                            </ReactMarkdown>
                          </StyledComponent>
                        </Typography__BodyCopy>
                      </div>
                    </StyledComponent>
                  </ContentBlock__Container>
                </div>
              </StyledComponent>
            </styled-shoelaces>
          </div>
        </StyledComponent>
      </styled-shoelaces>
    </ContentBlock>
  </StyledComponent>
</ContentBlock__StyledContentBlock>
`;
