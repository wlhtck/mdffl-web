// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`componenets/nebulas/Typography BodyCopy renders a <BodyCopy /> 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Typography__BodyCopy-sc-1h5b1wa-2",
        "isStatic": false,
        "rules": Array [
          "text-align:",
          [Function],
          ";color:",
          [Function],
          ";font-family:'Lato',sans-serif;font-size:24px;margin:0 0 32px;",
        ],
      },
      "defaultProps": Object {
        "inverted": false,
        "textAlign": "left",
      },
      "displayName": "Typography__BodyCopy",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "inverted": [Function],
        "textAlign": [Function],
      },
      "render": [Function],
      "renderers": Object {
        "blockquote": "blockquote",
        "break": "br",
        "code": [Function],
        "definition": [Function],
        "delete": "del",
        "emphasis": "em",
        "heading": [Function],
        "html": [Function],
        "image": "img",
        "imageReference": "img",
        "inlineCode": [Function],
        "link": "a",
        "linkReference": "a",
        "list": [Function],
        "listItem": [Function],
        "paragraph": "p",
        "parsedHtml": [Function],
        "root": [Function],
        "strong": "strong",
        "table": [Function],
        "tableBody": [Function],
        "tableCell": [Function],
        "tableHead": [Function],
        "tableRow": [Function],
        "text": [Function],
        "thematicBreak": "hr",
        "virtualHtml": [Function],
      },
      "styledComponentId": "Typography__BodyCopy-sc-1h5b1wa-2",
      "target": [Function],
      "toString": [Function],
      "types": Array [
        "break",
        "paragraph",
        "emphasis",
        "strong",
        "thematicBreak",
        "blockquote",
        "delete",
        "link",
        "image",
        "linkReference",
        "imageReference",
        "table",
        "tableHead",
        "tableBody",
        "tableRow",
        "tableCell",
        "root",
        "text",
        "list",
        "listItem",
        "definition",
        "heading",
        "inlineCode",
        "code",
        "html",
        "virtualHtml",
        "parsedHtml",
      ],
      "uriTransformer": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    }
  }
  forwardedRef={null}
  inverted={false}
  textAlign="left"
>
  Body Copy
</StyledComponent>
`;

exports[`componenets/nebulas/Typography BodyCopy renders an centered <BodyCopy /> 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Typography__BodyCopy-sc-1h5b1wa-2",
        "isStatic": false,
        "rules": Array [
          "text-align:",
          [Function],
          ";color:",
          [Function],
          ";font-family:'Lato',sans-serif;font-size:24px;margin:0 0 32px;",
        ],
      },
      "defaultProps": Object {
        "inverted": false,
        "textAlign": "left",
      },
      "displayName": "Typography__BodyCopy",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "inverted": [Function],
        "textAlign": [Function],
      },
      "render": [Function],
      "renderers": Object {
        "blockquote": "blockquote",
        "break": "br",
        "code": [Function],
        "definition": [Function],
        "delete": "del",
        "emphasis": "em",
        "heading": [Function],
        "html": [Function],
        "image": "img",
        "imageReference": "img",
        "inlineCode": [Function],
        "link": "a",
        "linkReference": "a",
        "list": [Function],
        "listItem": [Function],
        "paragraph": "p",
        "parsedHtml": [Function],
        "root": [Function],
        "strong": "strong",
        "table": [Function],
        "tableBody": [Function],
        "tableCell": [Function],
        "tableHead": [Function],
        "tableRow": [Function],
        "text": [Function],
        "thematicBreak": "hr",
        "virtualHtml": [Function],
      },
      "styledComponentId": "Typography__BodyCopy-sc-1h5b1wa-2",
      "target": [Function],
      "toString": [Function],
      "types": Array [
        "break",
        "paragraph",
        "emphasis",
        "strong",
        "thematicBreak",
        "blockquote",
        "delete",
        "link",
        "image",
        "linkReference",
        "imageReference",
        "table",
        "tableHead",
        "tableBody",
        "tableRow",
        "tableCell",
        "root",
        "text",
        "list",
        "listItem",
        "definition",
        "heading",
        "inlineCode",
        "code",
        "html",
        "virtualHtml",
        "parsedHtml",
      ],
      "uriTransformer": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    }
  }
  forwardedRef={null}
  inverted={false}
  textAlign="center"
>
  Body Copy
</StyledComponent>
`;

exports[`componenets/nebulas/Typography BodyCopy renders an inverted <BodyCopy /> 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Typography__BodyCopy-sc-1h5b1wa-2",
        "isStatic": false,
        "rules": Array [
          "text-align:",
          [Function],
          ";color:",
          [Function],
          ";font-family:'Lato',sans-serif;font-size:24px;margin:0 0 32px;",
        ],
      },
      "defaultProps": Object {
        "inverted": false,
        "textAlign": "left",
      },
      "displayName": "Typography__BodyCopy",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "inverted": [Function],
        "textAlign": [Function],
      },
      "render": [Function],
      "renderers": Object {
        "blockquote": "blockquote",
        "break": "br",
        "code": [Function],
        "definition": [Function],
        "delete": "del",
        "emphasis": "em",
        "heading": [Function],
        "html": [Function],
        "image": "img",
        "imageReference": "img",
        "inlineCode": [Function],
        "link": "a",
        "linkReference": "a",
        "list": [Function],
        "listItem": [Function],
        "paragraph": "p",
        "parsedHtml": [Function],
        "root": [Function],
        "strong": "strong",
        "table": [Function],
        "tableBody": [Function],
        "tableCell": [Function],
        "tableHead": [Function],
        "tableRow": [Function],
        "text": [Function],
        "thematicBreak": "hr",
        "virtualHtml": [Function],
      },
      "styledComponentId": "Typography__BodyCopy-sc-1h5b1wa-2",
      "target": [Function],
      "toString": [Function],
      "types": Array [
        "break",
        "paragraph",
        "emphasis",
        "strong",
        "thematicBreak",
        "blockquote",
        "delete",
        "link",
        "image",
        "linkReference",
        "imageReference",
        "table",
        "tableHead",
        "tableBody",
        "tableRow",
        "tableCell",
        "root",
        "text",
        "list",
        "listItem",
        "definition",
        "heading",
        "inlineCode",
        "code",
        "html",
        "virtualHtml",
        "parsedHtml",
      ],
      "uriTransformer": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    }
  }
  forwardedRef={null}
  inverted={true}
  textAlign="left"
>
  Body Copy
</StyledComponent>
`;

exports[`componenets/nebulas/Typography BodyCopy renders an right aligned <BodyCopy /> 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Typography__BodyCopy-sc-1h5b1wa-2",
        "isStatic": false,
        "rules": Array [
          "text-align:",
          [Function],
          ";color:",
          [Function],
          ";font-family:'Lato',sans-serif;font-size:24px;margin:0 0 32px;",
        ],
      },
      "defaultProps": Object {
        "inverted": false,
        "textAlign": "left",
      },
      "displayName": "Typography__BodyCopy",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "inverted": [Function],
        "textAlign": [Function],
      },
      "render": [Function],
      "renderers": Object {
        "blockquote": "blockquote",
        "break": "br",
        "code": [Function],
        "definition": [Function],
        "delete": "del",
        "emphasis": "em",
        "heading": [Function],
        "html": [Function],
        "image": "img",
        "imageReference": "img",
        "inlineCode": [Function],
        "link": "a",
        "linkReference": "a",
        "list": [Function],
        "listItem": [Function],
        "paragraph": "p",
        "parsedHtml": [Function],
        "root": [Function],
        "strong": "strong",
        "table": [Function],
        "tableBody": [Function],
        "tableCell": [Function],
        "tableHead": [Function],
        "tableRow": [Function],
        "text": [Function],
        "thematicBreak": "hr",
        "virtualHtml": [Function],
      },
      "styledComponentId": "Typography__BodyCopy-sc-1h5b1wa-2",
      "target": [Function],
      "toString": [Function],
      "types": Array [
        "break",
        "paragraph",
        "emphasis",
        "strong",
        "thematicBreak",
        "blockquote",
        "delete",
        "link",
        "image",
        "linkReference",
        "imageReference",
        "table",
        "tableHead",
        "tableBody",
        "tableRow",
        "tableCell",
        "root",
        "text",
        "list",
        "listItem",
        "definition",
        "heading",
        "inlineCode",
        "code",
        "html",
        "virtualHtml",
        "parsedHtml",
      ],
      "uriTransformer": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
      Symbol(Symbol.hasInstance): [Function],
    }
  }
  forwardedRef={null}
  inverted={false}
  textAlign="right"
>
  Body Copy
</StyledComponent>
`;

exports[`componenets/nebulas/Typography FeatureHeadline renders a  <FeatureHeadline /> 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
        "isStatic": true,
        "rules": Array [
          "color:",
          "#303133",
          ";font-family:'Raleway',sans-serif;margin:0 0 32px;font-weight:700;font-size:36px;",
        ],
      },
      "displayName": "Typography__FeatureHeadline",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "Typography__FeatureHeadline-sc-1h5b1wa-1",
      "target": "h2",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  Feature Headline
</StyledComponent>
`;

exports[`componenets/nebulas/Typography Headline renders a <Headline /> 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Typography__Headline-sc-1h5b1wa-0",
        "isStatic": true,
        "rules": Array [
          "color:",
          "#FFFFFF",
          ";font-family:'Raleway',sans-serif;margin:0 0 32px;font-weight:800;font-size:36px;",
        ],
      },
      "displayName": "Typography__Headline",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "Typography__Headline-sc-1h5b1wa-0",
      "target": "h1",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  Headline
</StyledComponent>
`;
